/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MyCard {
        "userName": string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface StencilFormUser {
        "isEdit": boolean;
        "item": {};
    }
    interface StencilTable {
        "items": any[];
    }
}
export interface StencilFormUserCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLStencilFormUserElement;
}
export interface StencilTableCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLStencilTableElement;
}
declare global {
    interface HTMLMyCardElement extends Components.MyCard, HTMLStencilElement {
    }
    var HTMLMyCardElement: {
        prototype: HTMLMyCardElement;
        new (): HTMLMyCardElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLStencilFormUserElement extends Components.StencilFormUser, HTMLStencilElement {
    }
    var HTMLStencilFormUserElement: {
        prototype: HTMLStencilFormUserElement;
        new (): HTMLStencilFormUserElement;
    };
    interface HTMLStencilTableElement extends Components.StencilTable, HTMLStencilElement {
    }
    var HTMLStencilTableElement: {
        prototype: HTMLStencilTableElement;
        new (): HTMLStencilTableElement;
    };
    interface HTMLElementTagNameMap {
        "my-card": HTMLMyCardElement;
        "my-component": HTMLMyComponentElement;
        "stencil-form-user": HTMLStencilFormUserElement;
        "stencil-table": HTMLStencilTableElement;
    }
}
declare namespace LocalJSX {
    interface MyCard {
        "userName"?: string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface StencilFormUser {
        "isEdit"?: boolean;
        "item"?: {};
        "onItemUser"?: (event: StencilFormUserCustomEvent<any>) => void;
    }
    interface StencilTable {
        "items"?: any[];
        "onItemUser"?: (event: StencilTableCustomEvent<any>) => void;
    }
    interface IntrinsicElements {
        "my-card": MyCard;
        "my-component": MyComponent;
        "stencil-form-user": StencilFormUser;
        "stencil-table": StencilTable;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-card": LocalJSX.MyCard & JSXBase.HTMLAttributes<HTMLMyCardElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "stencil-form-user": LocalJSX.StencilFormUser & JSXBase.HTMLAttributes<HTMLStencilFormUserElement>;
            "stencil-table": LocalJSX.StencilTable & JSXBase.HTMLAttributes<HTMLStencilTableElement>;
        }
    }
}
